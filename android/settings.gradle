
rootProject.name = 'superleitor'
include ':app'

println "=== Capacitor 7.x Core Module Detection ==="

// Caminho correto para node_modules fora da pasta android/
def nodeModulesRoot = new File(rootDir, '../node_modules')

println "Looking for node_modules at: ${nodeModulesRoot.absolutePath}"
println "Node modules exists: ${nodeModulesRoot.exists()}"

if (!nodeModulesRoot.exists()) {
    println "❌ node_modules directory not found at: ${nodeModulesRoot.absolutePath}"
    throw new GradleException("node_modules directory not found. Please run 'npm install' first.")
}

// Only include the core Capacitor Android module - plugins are handled by Capacitor's plugin system
def capacitorAndroidDir = new File(nodeModulesRoot, '@capacitor/android')
println "Looking for Capacitor Android at: ${capacitorAndroidDir.absolutePath}"
println "Capacitor Android exists: ${capacitorAndroidDir.exists()}"

if (capacitorAndroidDir.exists()) {
    include ':capacitor-android'
    project(':capacitor-android').projectDir = capacitorAndroidDir
    println "✅ Included :capacitor-android (Capacitor 7.x core module)"
} else {
    println "❌ Missing :capacitor-android"
    throw new GradleException("Essential Capacitor Android module not found at: ${capacitorAndroidDir.absolutePath}")
}

println "=== Capacitor 7.x Core Module Detection Complete ==="
println "ℹ️  Individual plugins will be loaded by Capacitor's plugin system at runtime"

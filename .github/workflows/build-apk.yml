
name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v4

      - name: 🟢 Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Instalar dependências Node
        run: npm ci

      - name: ☕ Instalar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: 📂 Mostrar estrutura node_modules/@capacitor
        run: ls -R node_modules/@capacitor || echo "⚠️ node_modules/@capacitor não encontrado"

      - name: 🔧 Configurar Gradle Wrapper
        run: |
          echo "Verificando arquivos do Gradle Wrapper..."
          
          # Configurar permissões do gradlew
          chmod +x android/gradlew
          
          # Verificar se gradle-wrapper.jar existe
          if [ ! -f "android/gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "⚠️ gradle-wrapper.jar não encontrado, baixando..."
            
            # Baixar gradle-wrapper.jar diretamente
            mkdir -p android/gradle/wrapper
            curl -L -o android/gradle/wrapper/gradle-wrapper.jar \
              "https://github.com/gradle/gradle/raw/v8.2.1/gradle/wrapper/gradle-wrapper.jar" || {
              echo "❌ Falha ao baixar gradle-wrapper.jar"
              exit 1
            }
            
            echo "✅ gradle-wrapper.jar baixado com sucesso"
          else
            echo "✅ gradle-wrapper.jar já existe"
          fi
          
          # Verificar outros arquivos wrapper
          ls -la android/gradlew
          ls -la android/gradle/wrapper/
          
          # Testar gradlew
          cd android && ./gradlew --version --no-daemon
          
          echo "✅ Gradle Wrapper configurado corretamente"
        working-directory: .

      - name: 🧹 Limpar build anterior
        run: ./gradlew clean
        working-directory: android

      - name: 🔨 Build do APK
        run: chmod +x .github/scripts/build-apk.sh && .github/scripts/build-apk.sh

      - name: 📤 Upload APK (opcional)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk

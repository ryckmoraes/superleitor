
name: Deploy Application and Build APK

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build web app
        run: npm run build

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Install Capacitor Android
        run: npm install @capacitor/android --legacy-peer-deps

      # Initialize Capacitor
      - name: Initialize Capacitor
        run: |
          if [ ! -f "capacitor.config.ts" ]; then
            echo 'import { CapacitorConfig } from "@capacitor/cli";
            const config: CapacitorConfig = {
              appId: "com.lovable.esferasonora",
              appName: "Esfera Sonora",
              webDir: "dist",
              server: {
                url: "https://61c9c85a-521b-4753-a60e-0cdb64c7b0cc.lovableproject.com?forceHideBadge=true",
                cleartext: true
              },
              android: {
                allowMixedContent: true
              }
            };
            export default config;' > capacitor.config.ts
          fi

      # Check if Android platform exists
      - name: Check if Android platform exists
        id: check_android
        run: |
          if [ -d "android" ]; then
            echo "platform_exists=true" >> $GITHUB_OUTPUT
          else
            echo "platform_exists=false" >> $GITHUB_OUTPUT
          fi

      # Add Android platform if needed
      - name: Add Android platform if needed
        if: steps.check_android.outputs.platform_exists == 'false'
        run: npx cap add android

      # Sync Capacitor before any Gradle operations
      - name: Sync Capacitor
        run: npx cap sync android

      # Create proper Gradle project structure
      - name: Create proper Gradle project structure
        run: |
          cd android
          
          # Create settings.gradle if missing
          if [ ! -f "settings.gradle" ]; then
            echo "rootProject.name = 'esferasonora'" > settings.gradle
            echo "include ':app'" >> settings.gradle
          fi
          
          # Create build.gradle in root directory if missing
          if [ ! -f "build.gradle" ]; then
            echo "buildscript {
                repositories {
                    google()
                    mavenCentral()
                }
                dependencies {
                    classpath 'com.android.tools.build:gradle:7.3.1'
                }
            }
            
            allprojects {
                repositories {
                    google()
                    mavenCentral()
                }
            }" > build.gradle
          fi
          
          # Make sure app directory exists
          mkdir -p app
          
          # Create app/build.gradle if missing
          if [ ! -f "app/build.gradle" ]; then
            echo "apply plugin: 'com.android.application'
            
            android {
                compileSdkVersion 33
                defaultConfig {
                    applicationId \"com.lovable.esferasonora\"
                    minSdkVersion 22
                    targetSdkVersion 33
                    versionCode 1
                    versionName \"1.0\"
                    testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"
                }
                buildTypes {
                    release {
                        minifyEnabled false
                        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                    }
                }
            }
            
            dependencies {
                implementation 'androidx.appcompat:appcompat:1.6.1'
            }" > app/build.gradle
          fi
          
          # Create gradle wrapper with specific version
          gradle wrapper --gradle-version 7.6
          chmod +x ./gradlew

      # Build the Android APK
      - name: Build Android APK
        run: |
          cd android
          ./gradlew :app:assembleDebug

      # Upload the APK artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: esfera-sonora-app
          path: android/app/build/outputs/apk/debug/app-debug.apk

      # Deployment to server (disabled for now)
      - name: Deploy to server
        if: false # Disable server deployment for now
        run: ./deploy.sh
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
